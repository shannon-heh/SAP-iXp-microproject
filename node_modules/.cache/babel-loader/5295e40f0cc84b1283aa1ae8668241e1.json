{"ast":null,"code":"var _jsxFileName = \"/Users/i818433/Desktop/micro-project-master/src/Contexts/AuthContextComponent.js\";\nimport React, { useState, createContext, useEffect } from 'react';\nvar AuthContext = createContext(false);\nexport function AuthContextComponent(props) {\n  const [isLoggedIn, setLogin] = useState(false);\n  const [isAdmin, setAdmin] = useState(false);\n\n  function checkLogin() {\n    if (localStorage.getItem(\"email\") && localStorage.getItem('sessionID')) {\n      setLogin(true);\n\n      if (localStorage.getItem(\"isAdmin\")) {\n        setAdmin(true);\n      }\n    } else {\n      setLogin(false);\n    }\n  } // \n\n\n  useEffect(() => {\n    checkLogin();\n  }, [isLoggedIn]);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      \"isLoggedIn\": isLoggedIn,\n      \"setLogin\": setLogin,\n      \"checkLogin\": checkLogin,\n      \"isAdmin\": isAdmin,\n      \"setAdmin\": setAdmin\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, props.children);\n}\nexport { AuthContext };","map":{"version":3,"sources":["/Users/i818433/Desktop/micro-project-master/src/Contexts/AuthContextComponent.js"],"names":["React","useState","createContext","useEffect","AuthContext","AuthContextComponent","props","isLoggedIn","setLogin","isAdmin","setAdmin","checkLogin","localStorage","getItem","children"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,aAAvB,EAAsCC,SAAtC,QAAsD,OAAtD;AAEA,IAAIC,WAAW,GAAGF,aAAa,CAAC,KAAD,CAA/B;AAEA,OAAO,SAASG,oBAAT,CAA8BC,KAA9B,EAAoC;AAEvC,QAAM,CAACC,UAAD,EAAYC,QAAZ,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAASC,QAAT,IAAqBT,QAAQ,CAAC,KAAD,CAAnC;;AAEA,WAASU,UAAT,GAAqB;AACjB,QAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiCD,YAAY,CAACC,OAAb,CAAqB,WAArB,CAApC,EAAsE;AAClEL,MAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,UAAGI,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAH,EAAmC;AAC/BH,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,KALD,MAMI;AACAF,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;AACJ,GAfsC,CAiBvC;;;AAEAL,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,UAAU;AACb,GAFQ,EAEP,CAACJ,UAAD,CAFO,CAAT;AAIA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAI;AAAC,oBAAcA,UAAf;AAA0B,kBAAWC,QAArC;AAA8C,oBAAaG,UAA3D;AAAsE,iBAAUF,OAAhF;AAAwF,kBAAWC;AAAnG,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,CAACQ,QADX,CADJ;AAKH;AAED,SAAQV,WAAR","sourcesContent":["import React,{useState,createContext, useEffect} from 'react';\n\nvar AuthContext = createContext(false);\n\nexport function AuthContextComponent(props){\n\n    const [isLoggedIn,setLogin] = useState(false);\n    const [isAdmin,setAdmin] = useState(false);\n\n    function checkLogin(){\n        if(localStorage.getItem(\"email\") && localStorage.getItem('sessionID')){\n            setLogin(true);\n            if(localStorage.getItem(\"isAdmin\")){\n                setAdmin(true);\n            }\n        }\n        else{\n            setLogin(false)\n        }\n    }\n\n    // \n\n    useEffect(()=>{\n        checkLogin();\n    },[isLoggedIn])\n    \n    return(\n        <AuthContext.Provider value = {{\"isLoggedIn\": isLoggedIn,\"setLogin\":setLogin,\"checkLogin\":checkLogin,\"isAdmin\":isAdmin,\"setAdmin\":setAdmin}} >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport {AuthContext};"]},"metadata":{},"sourceType":"module"}