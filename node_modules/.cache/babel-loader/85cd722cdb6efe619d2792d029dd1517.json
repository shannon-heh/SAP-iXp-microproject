{"ast":null,"code":"var _jsxFileName = \"/Users/i818433/Desktop/micro-project-master/src/Contexts/SearchContextComponent.js\";\nimport React, { useState, useEffect, createContext } from 'react';\nimport Axios from 'axios';\nvar SearchContext = createContext();\nexport function SearchContextComponent(props) {\n  const [userData, setUserData] = useState(\"\");\n  const [userEmails, setUserEmails] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  function getEmails(q) {\n    console.log(query);\n    Axios.post(\"http://localhost:3000/findemails\", {\n      query: q\n    }, {\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res.data);\n      setUserEmails(res.data);\n    }).catch(err => console.log(err));\n  }\n\n  function getData() {\n    return Axios.get(\"http://localhost:3000/user?email=\" + email).then(res => {\n      setUserData(res.data);\n      setUsername(res.data.name);\n    }).catch(err => console.log(err));\n  }\n\n  function searchQuery(e) {\n    setQuery(e.target.value);\n    getData(e.target.value);\n  }\n\n  useEffect(() => {\n    getEmails(query);\n  }, [query]);\n\n  function setterEmail(e) {\n    console.log(e.target.textContent);\n    setEmail(e.target.textContent);\n    setQuery(\"\");\n  }\n\n  useEffect(() => {\n    getData();\n  }, [email]);\n  return /*#__PURE__*/React.createElement(SearchContext.Provider, {\n    value: {\n      username,\n      userData,\n      setUserData,\n      userEmails,\n      setUserEmails,\n      query,\n      setQuery,\n      email,\n      setEmail,\n      getEmails,\n      getData,\n      searchQuery,\n      setterEmail\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, props.children);\n}\nexport { SearchContext };","map":{"version":3,"sources":["/Users/i818433/Desktop/micro-project-master/src/Contexts/SearchContextComponent.js"],"names":["React","useState","useEffect","createContext","Axios","SearchContext","SearchContextComponent","props","userData","setUserData","userEmails","setUserEmails","query","setQuery","email","setEmail","username","setUsername","getEmails","q","console","log","post","headers","then","res","data","catch","err","getData","get","name","searchQuery","e","target","value","setterEmail","textContent","children"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,createContext} from 'react';\nimport Axios from 'axios';\nvar SearchContext = createContext();\n\nexport function SearchContextComponent(props){\n    const [userData,setUserData] = useState(\"\");\n    const [userEmails,setUserEmails] = useState([]);\n    const [query,setQuery] = useState(\"\");\n    const [email,setEmail] = useState(\"\");\n    const [username,setUsername] = useState(\"\");\n\n    function getEmails (q) {\n        console.log(query);\n       Axios.post(\"http://localhost:3000/findemails\",{query:q},\n       {\n           headers: { \n               'content-type' : 'application/json' \n           }\n       })\n       .then(\n           (res)=>{\n               console.log(res.data)\n               setUserEmails(res.data)\n           }\n       )\n       .catch(err => console.log(err));\n   }\n\n   function getData () {\n    return Axios.get(\"http://localhost:3000/user?email=\"+email)\n        .then(res => {\n            setUserData(res.data);\n            setUsername(res.data.name);\n        })\n        .catch(err => console.log(err));\n}\n\nfunction searchQuery(e){\n    setQuery(e.target.value);\n    getData(e.target.value)  \n}\n\nuseEffect(()=>{\n        getEmails(query);\n},[query])\n\n\nfunction setterEmail(e){\n    console.log(e.target.textContent);\n    setEmail(e.target.textContent);\n    setQuery(\"\");\n}\n\nuseEffect(()=>{\n    getData()\n},[email])\n\n\n    return(\n        <SearchContext.Provider value = {{username,userData,setUserData,userEmails,setUserEmails,query,setQuery,email,setEmail,getEmails,getData,searchQuery,setterEmail}}>\n            {props.children}\n        </SearchContext.Provider>\n    )\n}\n\nexport {SearchContext};"]},"metadata":{},"sourceType":"module"}